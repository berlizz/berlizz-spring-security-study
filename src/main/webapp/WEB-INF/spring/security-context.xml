<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns="http://www.springframework.org/schema/security"
		 xmlns:b="http://www.springframework.org/schema/beans"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">


	<!-- 확장자를 이용해 패턴을 걸때는 /**/*.해당 확장자 로 할 것(ant pattern) -->
	<!-- url pattern은 구체적인 url을 먼저 설정하고 덜 구체적인 url 순으로 설정, -->
	<!-- spring security는 위에서 부터 순차적으로 패턴을 만족하는지 검사함 -->
	<!-- <http pattern="/**/*.js" security="none" /> -->
	<!-- 
	<http auto-config="true" use-expressions="false">
		<intercept-url pattern="/admin" access="ROLE_ADMIN" />
		<intercept-url pattern="/user" access="ROLE_USER" />	
		<intercept-url pattern="/**" access="ROLE_ANONYMOUS,ROLE_USER,ROLE_ADMIN" /> -->
	
	<http auto-config="true" use-expressions="true">	<!-- spring el을 사용하여 작성하는 것이 편하다 -->
		<intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/user" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/login" access="isAnonymous()" />
		<intercept-url pattern="/**" access="permitAll" />
		
		<!-- custom 로그인 페이지 지정 -->
		<!-- username-parameter 값을 줘서 아이디값을 입력하는 input태그의 name 속성을 j_username으로 사용하지 않아도 된다(임의로 name지정 가능). 패스워드도 마찬가지  -->
		<!-- 
			login-processing-url은 로그인을 처리하기 위해 지정하는 url로 default 값은 /login
			로그인 성공 시 강제로 default-target-url 값으로 보내려면  always-use-default-target="true"으로 속성을 추가하면 된다. 
			default값은 false 인데 그 상황은 로그인이  성공했을 시 권한이 필요했던 페이지로 이동한다(원래 이동 하려던 페이지로 이동). 
			authentication-failure-url="/login?fail=true"속성은 authentication-failure-handler-ref 추가 후 제외 
		-->
		<form-login 
				username-parameter="loginId" 
				password-parameter="loginPw"
				login-processing-url="/loginCheck"
				login-page="/login"
				default-target-url="/"
				authentication-success-handler-ref="customAuthenticationSuccessHandler"
				authentication-failure-handler-ref="customAuthenticationFailureHandler"	/>
				
	
		
		<!-- 
			logout-url은 로그아웃을 처리하기 위한 url이다. default값도 /logout, 
			csrf값과 함꼐 같이 포스트 방식으로 전달 받아야 되는거 같은데, 설명에는 그냥 get방식으로 받아버리네 좀 더 확인필요 
			별도로 더 지워야 할 쿠기가 있으면 ,를 구분자로 여러개의 쿠키 이름 지정 
		-->
		<logout 
			logout-url="/logout"
			logout-success-url="/"
			delete-cookies="JSESSIONID"	/>
		<csrf />
		
	</http>
	
	
	<!-- <authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="user" password="user" authorities="ROLE_USER" />
				<user name="admin" password="admin" authorities="ROLE_ADMIN" />
			</user-service>
		</authentication-provider>
	</authentication-manager> -->
	
	<authentication-manager>
		<authentication-provider user-service-ref="customJdbcDAOImpl" />
	</authentication-manager>
	
	<b:bean id="customJdbcDAOImpl" class="com.berlizz.domain.CustomJdbcDAOImpl">
		<b:property name="dataSource" ref="dataSource" />
		<b:property name="rolePrefix" value="ROLE_" />
		<b:property name="usersByUsernameQuery" value="select ID, PASSWORD, NAME from MEMBERINFO where ID = ?" />
		<b:property name="authoritiesByUsernameQuery" value="select AUTHORITY from MEMBER_AUTHORITY where ID =?" />
		<b:property name="enableGroups" value="false" />
	</b:bean>
	<!-- rolePrefix default값은 "ROLE_" -->
	
	
	<!-- 
		로그인 성공 시 부가적인 작업을 하기 위한 클래스 빈 등록
		targetUrlParameter 는 로그인 성공한 뒤 이동할 화면 url이 들어있는 파라미터 이름을 지정
		
	-->
	<b:bean id="customAuthenticationSuccessHandler" class="com.berlizz.domain.CustomAuthenticationSuccessHandler">
		<b:property name="targetUrlParameter" value="loginRedirect" />
		<b:property name="useReferer" value="false" />
		<b:property name="defaultUrl" value="/" />
	</b:bean>
	
	
	<!-- 
		로그인 실패 시 부가적인 작업을 하기 위한 클래스 빈 등록
	 -->
	 <b:bean id="customAuthenticationFailureHandler" class="com.berlizz.domain.CustomAuthenticationFailureHandler">
	 	<b:property name="loginIdName" value="loginId" />
	 	<b:property name="loginPwdName" value="loginPw" />
	 	<b:property name="loginRedirectName" value="loginRedirect" />
	 	<b:property name="exceptionMsgName" value="securityExceptionMsg" />
	 	<b:property name="defaultFailureUrl" value="/login?fail=true" />
	 </b:bean>
	
	
	
</b:beans>

